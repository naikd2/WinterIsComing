function [xco, dtft] = ccrs(x,y,nx,ny)
% function [rxy,l] = ccrs(x,y,nx,ny)

% Time reverse y 

% flipY = fliplr(y); 
% 
% l = length(nx) + length(ny)
% 
% s = nx(1);
% t = nx(length(nx));
% 
% 
% 
% 
% for c = 1:2
%     
%     for n = s:1:t
%         
%         rxy = x(n) * flipY(n)
%        
%     end
%     
% end
% 
% l = length(nx) + length(ny)


%Kevin's way

%Time reverse the y matrx
flipY = fliplr(y); 

%length of x
xl = abs( nx(1) ) + abs( nx(2) ) + 1;
%length of y
yl = abs( ny(1) ) + abs( ny(2) ) + 1;

%length of final result
l = xl + yl - 1;

%Create empty matrix to store values in
M = zeros(yl,l);

%used to properly place values in correct rows and columns
spacer = 0;

%Convolution by table method
for i = 1:yl
    for j = 1:xl
        M(i,j+spacer) = [flipY(j) * x(i)];
    end
    spacer = spacer + 1;
end
xco = sum(M);

%DTFT. Currently only plots 1 period
N = 256;
X = fft(x, N);
w = 2*pi * (0:(N-1)) / N;
w2 = fftshift(w);
w3 = unwrap(w2 - 2*pi);
plot(w3/pi, abs(fftshift(X)))
grid
xlabel('radians / \pi')

end